/*Classe: TelaResultado
  Pacote: protototipominop.view
  Funcionalidade: Essa classe representa a tela na qual será exibido o resultado
  da classificação realizada. Tem-se a opção de visualizar amostras das mensagens
  e a possibilidade de gerar 2 arquivos, cada um contendo uma classe da classificação.
  Autor: Leandro Matioli Santos
*/

package protototipominop.view;

import java.awt.Component;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import protototipominop.controller.GraficoController;
import protototipominop.model.GraficoModel;

/**
 *
 * @author Leandro
 */
public class TelaResultado extends javax.swing.JPanel {

    public static GraficoModel graficoModel = new GraficoModel();
    public static String amostraSelecionada;

    /** Creates new form TelaResultado */
    public TelaResultado() {
        initComponents();

        GraficoController graficoController = new GraficoController();

        //Monta o caminho do arquivo com a saida da classificacao
        String arquivo = "./svm" + System.getProperty("file.separator") +
                         "saidasSvm" + System.getProperty("file.separator") +
                         TelaPrincipal.baseDeTextoController.retornaNomeArquivo(TelaPrincipal.baseDeTextoController.baseDeTextoModel.getCaminhoAbsoluto()) +
                         "-SAIDACLASSIFICACAO";

        graficoModel = graficoController.montaGraficoModel(arquivo, TelaPrincipal.baseDeTextoController.baseDeTextoModel.getCaminhoAbsoluto(),
                                                           TelaDescreveClassificacao.classificacaoEscolhida, TelaDescreveClassificacao.assunto);

        graficoController.inserirBanco(graficoModel);
        
        JFreeChart grafico = graficoController.geraGrafico(graficoModel);

        Component comp = new ChartPanel(grafico);

        painelGrafico.add(comp);
        painelGrafico.setVisible(true);

        //Se for processo inteiro, seta o nome da classe de acordo com o especificada na TelaDescreveClassificacao
        if(TelaPrincipal.ehProcessoInteiro){
            
            labelTextoClassePositiva.setText(TelaDescreveClassificacao.classificacaoEscolhida.split("/")[0] + ":");
            labelTextoClasseNegativa.setText(TelaDescreveClassificacao.classificacaoEscolhida.split("/")[1] + ":");

        }

        //Seta as quantidades de documentos resultantes em cada classe
        labelQtdClasseNegativa.setText(Integer.toString(graficoModel.getQtdClasse0()) + " documento(s)");
        labelQtdClassePositiva.setText(Integer.toString(graficoModel.getQtdClasse1()) + " documento(s)");

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textoResultadoClassificacao = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        painelGrafico = new javax.swing.JPanel();
        labelTextoClassePositiva = new javax.swing.JLabel();
        labelTextoClasseNegativa = new javax.swing.JLabel();
        labelQtdClassePositiva = new javax.swing.JLabel();
        labelQtdClasseNegativa = new javax.swing.JLabel();
        btnAmostraNegativa = new javax.swing.JButton();
        btnAmostraPositiva = new javax.swing.JButton();
        btnGerarArquivos = new javax.swing.JButton();
        labelSeparaArq1 = new javax.swing.JLabel();
        labelSeparaArq2 = new javax.swing.JLabel();
        labelSeparaArq3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(733, 428));

        textoResultadoClassificacao.setFont(new java.awt.Font("Tahoma", 0, 18));
        textoResultadoClassificacao.setText("Resultado da classificação:");

        painelGrafico.setLayout(new java.awt.GridLayout(1, 0));

        labelTextoClassePositiva.setText("Classe Positiva: ");

        labelTextoClasseNegativa.setText("Classe Negativa: ");

        labelQtdClassePositiva.setText("       ");

        labelQtdClasseNegativa.setText("   ");

        btnAmostraNegativa.setText("Amostra");
        btnAmostraNegativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmostraNegativaActionPerformed(evt);
            }
        });

        btnAmostraPositiva.setText("Amostra");
        btnAmostraPositiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmostraPositivaActionPerformed(evt);
            }
        });

        btnGerarArquivos.setText("Gerar arquivos");
        btnGerarArquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarArquivosActionPerformed(evt);
            }
        });

        labelSeparaArq1.setText("Gerar 2 arquivos,");

        labelSeparaArq2.setText("contendo cada um");

        labelSeparaArq3.setText("uma classe?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(textoResultadoClassificacao))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addComponent(painelGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSeparaArq3)
                                    .addComponent(labelSeparaArq2)
                                    .addComponent(labelSeparaArq1)
                                    .addComponent(btnGerarArquivos)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelTextoClassePositiva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelQtdClassePositiva, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAmostraPositiva)
                        .addGap(51, 51, 51)
                        .addComponent(labelTextoClasseNegativa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelQtdClasseNegativa, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAmostraNegativa)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textoResultadoClassificacao)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQtdClasseNegativa)
                    .addComponent(labelTextoClasseNegativa)
                    .addComponent(labelTextoClassePositiva)
                    .addComponent(labelQtdClassePositiva)
                    .addComponent(btnAmostraNegativa)
                    .addComponent(btnAmostraPositiva))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(painelGrafico, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelSeparaArq1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSeparaArq2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSeparaArq3)
                        .addGap(10, 10, 10)
                        .addComponent(btnGerarArquivos)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAmostraPositivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmostraPositivaActionPerformed

        btnAmostraNegativa.setEnabled(false);
        btnAmostraPositiva.setEnabled(false);

        TelaPrincipal.btnAnterior.setEnabled(false);
        TelaPrincipal.menuArquivo.setEnabled(false);
        TelaPrincipal.menuColeta.setEnabled(false);
        TelaPrincipal.menuResultado.setEnabled(false);   

        TelaAmostra telaAmostra = new TelaAmostra();

        //Se for processo completo, recupera o nome da TelaDescreveClassificacao
        if(TelaPrincipal.ehProcessoInteiro){

            amostraSelecionada = TelaDescreveClassificacao.classificacaoEscolhida.split("/")[0];

        } else {

            amostraSelecionada = "Classe Positiva";

        }

        telaAmostra.setTitle("Classe - " + amostraSelecionada);
        telaAmostra.labelAmostraClassificacao.setText("Amostra da classificação (" + amostraSelecionada + "):");
        
        telaAmostra.setVisible(true);



    }//GEN-LAST:event_btnAmostraPositivaActionPerformed

    private void btnAmostraNegativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmostraNegativaActionPerformed

        btnAmostraNegativa.setEnabled(false);
        btnAmostraPositiva.setEnabled(false);

        TelaPrincipal.btnAnterior.setEnabled(false);
        TelaPrincipal.menuArquivo.setEnabled(false);
        TelaPrincipal.menuColeta.setEnabled(false);
        TelaPrincipal.menuResultado.setEnabled(false);
      
        TelaAmostra telaAmostra = new TelaAmostra();

        //Se for processo completo, recupera o nome da TelaDescreveClassificacao
        if(TelaPrincipal.ehProcessoInteiro){

            amostraSelecionada = TelaDescreveClassificacao.classificacaoEscolhida.split("/")[1];  

        }else {

            amostraSelecionada = "Classe Negativa";

        }

        telaAmostra.setTitle("Classe - " + amostraSelecionada);
        telaAmostra.labelAmostraClassificacao.setText("Amostra da classificação (" + amostraSelecionada + "):");
        
        telaAmostra.setVisible(true);





    }//GEN-LAST:event_btnAmostraNegativaActionPerformed

    private void btnGerarArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarArquivosActionPerformed

        labelSeparaArq1.setEnabled(false);
        labelSeparaArq2.setEnabled(false);
        labelSeparaArq3.setEnabled(false);

        btnGerarArquivos.setEnabled(false);

        //Monta o caminho do arquivo com a saida da classificacao
        String arquivoSaida = "./svm" + System.getProperty("file.separator") +
                              "saidasSvm" + System.getProperty("file.separator") +
                              TelaPrincipal.baseDeTextoController.retornaNomeArquivo(TelaPrincipal.baseDeTextoController.baseDeTextoModel.getCaminhoAbsoluto()) +
                              "-SAIDACLASSIFICACAO";

        TelaPrincipal.baseDeTextoController.separaClassificacaoFinal(TelaPrincipal.baseDeTextoController.baseDeTextoModel.getCaminhoAbsoluto() + "-CLASSIFICACAONORMAL",
                                                                      arquivoSaida, labelTextoClassePositiva.getText().replace(":", "").toUpperCase(),
                                                                      labelTextoClasseNegativa.getText().replace(":", "").toUpperCase());

        JOptionPane.showMessageDialog(null, "Arquivos gerados com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);



    }//GEN-LAST:event_btnGerarArquivosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAmostraNegativa;
    public static javax.swing.JButton btnAmostraPositiva;
    private javax.swing.JButton btnGerarArquivos;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelQtdClasseNegativa;
    private javax.swing.JLabel labelQtdClassePositiva;
    private javax.swing.JLabel labelSeparaArq1;
    private javax.swing.JLabel labelSeparaArq2;
    private javax.swing.JLabel labelSeparaArq3;
    public static javax.swing.JLabel labelTextoClasseNegativa;
    public static javax.swing.JLabel labelTextoClassePositiva;
    private javax.swing.JPanel painelGrafico;
    private javax.swing.JLabel textoResultadoClassificacao;
    // End of variables declaration//GEN-END:variables

}
